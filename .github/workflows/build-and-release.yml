name: Olake UI Build And Release
on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to build (master, staging, dev)"
        required: true
        default: ""
        type: string
      version:
        description: "Version to release"
        required: true
        default: ""
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to build (master, staging, dev)"
        required: true
        default: "dev"
        type: choice
        options:
          - master
          - staging
          - dev
      version:
        description: "Version to release"
        required: true
        default: "v0.0.0.dev"
        type: string

jobs:
  build_and_publish_frontend:
    name: Build and publish frontend image for ${{ github.event.inputs.environment }}
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    env:
      DOCKER_LOGIN: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REPO: ${{ secrets.DOCKER_REPO || 'olakego' }}
      DOCKER_REPO_WORKER: ${{ secrets.DOCKER_REPO_WORKER || 'olakego' }}
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      VERSION: ${{ github.event.inputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.environment == 'master' && 'master' || (github.event.inputs.environment == 'staging' && 'staging' || github.event.inputs.environment == 'dev' && 'ci/workerReleaseIssues' || 'develop') }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('ui/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup environment variables
        run: |
          echo "ENVIRONMENT=${{ env.ENVIRONMENT }}" >> $GITHUB_ENV
          echo "VERSION=${{ env.VERSION }}" >> $GITHUB_ENV
          echo "Building frontend application for $ENVIRONMENT with version $VERSION"

      - name: Run Release tool
        run: |
          chmod +x ./release.sh
          ./release.sh
        shell: bash
